package d220317;// Generated by Selenium IDE

import org.junit.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import static org.junit.Assert.assertThat;

import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;

import java.util.*;

public class LoginTest extends BaseTest {

    @Test
    public void loginPositive() {
        loginPage.goToLoginPage(); //  driver.findElement(By.linkText("Form Authentication")).click();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys("tomsmith");
        driver.findElement(By.id("password")).sendKeys("SuperSecretPassword!");
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".icon-2x"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void loginNegativeNothing() {
        loginPage.goToLoginPage(); // Оптимизация, чтоб не повторяться, т.к. есть одинаковые строки (при изменении
        // части текста, не нужно будет менять во многих местах данные)
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.id("flash"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void loginNegativeNoLogin() {
        loginPage.goToLoginPage();
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("SuperSecretPassword!");
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.id("flash"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void loginNegativeNoPass() {
        loginPage.goToLoginPage();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys("TomSmith");
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.id("flash"));
            assert (elements.size() > 0);
        }
        /* почему тест не проходит при такой записи?
        driver.findElement(By.id("flash")).click();
        assertThat(driver.findElement(By.id("flash")).getText(), is("Your username is invalid!\\\\n×"));
        */
    }

    @Test
    public void loginNegativeWrongPass() {
        loginPage.goToLoginPage();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys("TomSmith");
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("Super!");
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.id("flash"));
            assert (elements.size() > 0);
        }
    }

    @Test
    public void loginNegativeWrongLogin() {
        loginPage.goToLoginPage();
        driver.findElement(By.id("username")).click();
        driver.findElement(By.id("username")).sendKeys("Tom");
        driver.findElement(By.id("password")).click();
        driver.findElement(By.id("password")).sendKeys("SuperSecretPassword!");
        driver.findElement(By.cssSelector(".fa")).click();
        {
            List<WebElement> elements = driver.findElements(By.id("flash"));
            assert (elements.size() > 0);
        }
    }
}